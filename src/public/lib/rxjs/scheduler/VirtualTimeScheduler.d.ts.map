{"version":3,"names":[],"mappings":"","sources":["rxjs/scheduler/VirtualTimeScheduler.d.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport declare class VirtualTimeScheduler extends AsyncScheduler {\n    maxFrames: number;\n    protected static frameTimeFactor: number;\n    frame: number;\n    index: number;\n    constructor(SchedulerAction?: typeof AsyncAction, maxFrames?: number);\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    flush(): void;\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport declare class VirtualAction<T> extends AsyncAction<T> {\n    protected scheduler: VirtualTimeScheduler;\n    protected work: (this: VirtualAction<T>, state?: T) => void;\n    protected index: number;\n    constructor(scheduler: VirtualTimeScheduler, work: (this: VirtualAction<T>, state?: T) => void, index?: number);\n    schedule(state?: T, delay?: number): Subscription;\n    protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): any;\n    protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay?: number): any;\n    static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>): number;\n}\n"],"file":"rxjs/scheduler/VirtualTimeScheduler.d.ts","sourceRoot":"/source/"}