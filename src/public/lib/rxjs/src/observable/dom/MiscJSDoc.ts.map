{"version":3,"names":[],"mappings":"","sources":["rxjs/src/observable/dom/MiscJSDoc.ts"],"sourcesContent":["import { Subscriber } from '../../Subscriber';\nimport { AjaxResponse } from './AjaxObservable';\n\n/**\n * @see {@link ajax}\n *\n * @interface\n * @name AjaxRequest\n * @noimport true\n */\nexport class AjaxRequestDoc {\n  /**\n   * @type {string}\n   */\n  url: string = '';\n  /**\n   * @type {number}\n   */\n  body: any = 0;\n  /**\n   * @type {string}\n   */\n  user: string = '';\n  /**\n   * @type {boolean}\n   */\n  async: boolean = false;\n  /**\n   * @type {string}\n   */\n  method: string = '';\n  /**\n   * @type {Object}\n   */\n  headers: Object = null;\n  /**\n   * @type {number}\n   */\n  timeout: number = 0;\n  /**\n   * @type {string}\n   */\n  password: string = '';\n  /**\n   * @type {boolean}\n   */\n  hasContent: boolean = false;\n  /**\n   * @type {boolean}\n   */\n  crossDomain: boolean = false;\n  /**\n   * @return {XMLHttpRequest}\n   */\n  createXHR(): XMLHttpRequest {\n    return null;\n  }\n  /**\n   * @type {Subscriber}\n   */\n  progressSubscriber: Subscriber<any> = null;\n  /**\n   * @param {AjaxResponse} response\n   * @return {T}\n   */\n  resultSelector<T>(response: AjaxResponse): T {\n    return null;\n  }\n  /**\n   * @type {string}\n   */\n  responseType: string = '';\n}\n"],"file":"rxjs/src/observable/dom/MiscJSDoc.ts","sourceRoot":"/source/"}