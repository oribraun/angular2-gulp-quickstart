{"version":3,"names":[],"mappings":"","sources":["rxjs/operator/skipWhile.d.ts"],"sourcesContent":["import { Observable } from '../Observable';\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - a function to test each item emitted from the source Observable.\n * @return {Observable<T>} an Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport declare function skipWhile<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean): Observable<T>;\n"],"file":"rxjs/operator/skipWhile.d.ts","sourceRoot":"/source/"}