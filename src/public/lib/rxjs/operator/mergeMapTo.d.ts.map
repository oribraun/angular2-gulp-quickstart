{"version":3,"names":[],"mappings":"","sources":["rxjs/operator/mergeMapTo.d.ts"],"sourcesContent":["import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nexport declare function mergeMapTo<T, R>(this: Observable<T>, observable: ObservableInput<R>, concurrent?: number): Observable<R>;\nexport declare function mergeMapTo<T, I, R>(this: Observable<T>, observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): Observable<R>;\nexport declare class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n    private ish;\n    private resultSelector;\n    private concurrent;\n    constructor(ish: ObservableInput<I>, resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number);\n    call(observer: Subscriber<R>, source: any): any;\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport declare class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n    private ish;\n    private resultSelector;\n    private concurrent;\n    private hasCompleted;\n    private buffer;\n    private active;\n    protected index: number;\n    constructor(destination: Subscriber<R>, ish: ObservableInput<I>, resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number);\n    protected _next(value: T): void;\n    private _innerSub(ish, destination, resultSelector, value, index);\n    protected _complete(): void;\n    notifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number, innerSub: InnerSubscriber<T, I>): void;\n    private trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    notifyError(err: any): void;\n    notifyComplete(innerSub: Subscription): void;\n}\n"],"file":"rxjs/operator/mergeMapTo.d.ts","sourceRoot":"/source/"}