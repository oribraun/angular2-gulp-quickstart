{"version":3,"names":[],"mappings":"","sources":["rxjs/operator/observeOn.d.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { Scheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nexport declare function observeOn<T>(this: Observable<T>, scheduler: Scheduler, delay?: number): Observable<T>;\nexport declare class ObserveOnOperator<T> implements Operator<T, T> {\n    private scheduler;\n    private delay;\n    constructor(scheduler: Scheduler, delay?: number);\n    call(subscriber: Subscriber<T>, source: any): TeardownLogic;\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport declare class ObserveOnSubscriber<T> extends Subscriber<T> {\n    private scheduler;\n    private delay;\n    static dispatch(arg: ObserveOnMessage): void;\n    constructor(destination: Subscriber<T>, scheduler: Scheduler, delay?: number);\n    private scheduleMessage(notification);\n    protected _next(value: T): void;\n    protected _error(err: any): void;\n    protected _complete(): void;\n}\nexport declare class ObserveOnMessage {\n    notification: Notification<any>;\n    destination: PartialObserver<any>;\n    constructor(notification: Notification<any>, destination: PartialObserver<any>);\n}\n"],"file":"rxjs/operator/observeOn.d.ts","sourceRoot":"/source/"}