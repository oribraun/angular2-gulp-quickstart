{"version":3,"names":[],"mappings":"","sources":["rxjs/observable/PairsObservable.d.ts"],"sourcesContent":["import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport declare class PairsObservable<T> extends Observable<Array<string | T>> {\n    private obj;\n    private scheduler;\n    private keys;\n    /**\n     * Convert an object into an observable sequence of [key, value] pairs\n     * using an optional Scheduler to enumerate the object.\n     *\n     * @example <caption>Converts a javascript object to an Observable</caption>\n     * var obj = {\n     *   foo: 42,\n     *   bar: 56,\n     *   baz: 78\n     * };\n     *\n     * var source = Rx.Observable.pairs(obj);\n     *\n     * var subscription = source.subscribe(\n     *   function (x) {\n     *     console.log('Next: %s', x);\n     *   },\n     *   function (err) {\n     *     console.log('Error: %s', err);\n     *   },\n     *   function () {\n     *     console.log('Completed');\n     *   });\n     *\n     * @param {Object} obj The object to inspect and turn into an\n     * Observable sequence.\n     * @param {Scheduler} [scheduler] An optional Scheduler to run the\n     * enumeration of the input sequence on.\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\n     * [key, value] pairs from the object.\n     */\n    static create<T>(obj: Object, scheduler?: Scheduler): Observable<Array<string | T>>;\n    constructor(obj: Object, scheduler?: Scheduler);\n    protected _subscribe(subscriber: Subscriber<Array<string | T>>): TeardownLogic;\n}\n"],"file":"rxjs/observable/PairsObservable.d.ts","sourceRoot":"/source/"}