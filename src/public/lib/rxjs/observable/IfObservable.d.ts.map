{"version":3,"names":[],"mappings":"","sources":["rxjs/observable/IfObservable.d.ts"],"sourcesContent":["import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport declare class IfObservable<T, R> extends Observable<T> {\n    private condition;\n    private thenSource;\n    private elseSource;\n    static create<T, R>(condition: () => boolean | void, thenSource?: SubscribableOrPromise<T> | void, elseSource?: SubscribableOrPromise<R> | void): Observable<T | R>;\n    constructor(condition: () => boolean | void, thenSource?: SubscribableOrPromise<T> | void, elseSource?: SubscribableOrPromise<R> | void);\n    protected _subscribe(subscriber: Subscriber<T | R>): TeardownLogic;\n}\n"],"file":"rxjs/observable/IfObservable.d.ts","sourceRoot":"/source/"}