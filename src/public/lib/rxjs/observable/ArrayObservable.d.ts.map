{"version":3,"names":[],"mappings":"","sources":["rxjs/observable/ArrayObservable.d.ts"],"sourcesContent":["import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport declare class ArrayObservable<T> extends Observable<T> {\n    private array;\n    private scheduler;\n    static create<T>(array: T[], scheduler?: Scheduler): Observable<T>;\n    static of<T>(item1: T, scheduler?: Scheduler): Observable<T>;\n    static of<T>(item1: T, item2: T, scheduler?: Scheduler): Observable<T>;\n    static of<T>(item1: T, item2: T, item3: T, scheduler?: Scheduler): Observable<T>;\n    static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: Scheduler): Observable<T>;\n    static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: Scheduler): Observable<T>;\n    static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: Scheduler): Observable<T>;\n    static of<T>(...array: Array<T | Scheduler>): Observable<T>;\n    static dispatch(state: any): void;\n    value: any;\n    constructor(array: T[], scheduler?: Scheduler);\n    protected _subscribe(subscriber: Subscriber<T>): TeardownLogic;\n}\n"],"file":"rxjs/observable/ArrayObservable.d.ts","sourceRoot":"/source/"}